{"ast":null,"code":"var _jsxFileName = \"/home/chesire/Development/code/phase-2/Flatiron-bank/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport './App.css';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FilterRecords(e) {\n  _s();\n  const [records, postRecords] = useState([]);\n  let matchingRecords = [];\n  e.preventDefault();\n  let search = e.target.filter.value;\n  fetch('http://localhost:4000/transactions').then(res => res.json()).then(data => {\n    for (let record of data) {\n      if (record.search(search) > -1) {\n        matchingRecords.unshift(record);\n        postRecords(matchingRecords);\n      }\n    }\n  });\n}\n_s(FilterRecords, \"oi2WwARGACvDI6IX70muOE7395E=\");\n_c = FilterRecords;\nfunction App() {\n  _s2();\n  const [records, postRecords] = useState([]);\n  fetch('http://localhost:4000/transactions').then(res => res.json()).then(data => postRecords(data));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type to filter records...\",\n        id: \"filter\",\n        onChange: filterRecords\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      records: records\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"oi2WwARGACvDI6IX70muOE7395E=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"FilterRecords\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["Header","Main","useState","jsxDEV","_jsxDEV","FilterRecords","e","_s","records","postRecords","matchingRecords","preventDefault","search","target","filter","value","fetch","then","res","json","data","record","unshift","_c","App","_s2","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","id","onChange","filterRecords","_c2","$RefreshReg$"],"sources":["/home/chesire/Development/code/phase-2/Flatiron-bank/src/App.js"],"sourcesContent":["import './App.css';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport { useState } from 'react';\n\nfunction FilterRecords(e){\n  const [records, postRecords] = useState([])\n  let matchingRecords = []\n  e.preventDefault()\n  let search = e.target.filter.value\n  fetch('http://localhost:4000/transactions')\n  .then(res=>res.json())\n  .then(data=>{\n      for(let record of data){\n          if(record.search(search)>-1){\n              matchingRecords.unshift(record)\n              postRecords(matchingRecords)\n          }\n      }\n  })\n}\n\n\nfunction App() {\n  const [records, postRecords] = useState([])\n  fetch('http://localhost:4000/transactions')\n  .then(res=>res.json())\n  .then(data => postRecords(data))\n  \n  return (\n    <div className=\"App\">\n      <Header />\n      <form>\n        <input type=\"text\" placeholder=\"Type to filter records...\" id=\"filter\" onChange={filterRecords} />\n      </form>\n      <Main records={records} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,aAAaA,CAACC,CAAC,EAAC;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC3C,IAAIQ,eAAe,GAAG,EAAE;EACxBJ,CAAC,CAACK,cAAc,EAAE;EAClB,IAAIC,MAAM,GAAGN,CAAC,CAACO,MAAM,CAACC,MAAM,CAACC,KAAK;EAClCC,KAAK,CAAC,oCAAoC,CAAC,CAC1CC,IAAI,CAACC,GAAG,IAAEA,GAAG,CAACC,IAAI,EAAE,CAAC,CACrBF,IAAI,CAACG,IAAI,IAAE;IACR,KAAI,IAAIC,MAAM,IAAID,IAAI,EAAC;MACnB,IAAGC,MAAM,CAACT,MAAM,CAACA,MAAM,CAAC,GAAC,CAAC,CAAC,EAAC;QACxBF,eAAe,CAACY,OAAO,CAACD,MAAM,CAAC;QAC/BZ,WAAW,CAACC,eAAe,CAAC;MAChC;IACJ;EACJ,CAAC,CAAC;AACJ;AAACH,EAAA,CAfQF,aAAa;AAAAkB,EAAA,GAAblB,aAAa;AAkBtB,SAASmB,GAAGA,CAAA,EAAG;EAAAC,GAAA;EACb,MAAM,CAACjB,OAAO,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC3Cc,KAAK,CAAC,oCAAoC,CAAC,CAC1CC,IAAI,CAACC,GAAG,IAAEA,GAAG,CAACC,IAAI,EAAE,CAAC,CACrBF,IAAI,CAACG,IAAI,IAAIX,WAAW,CAACW,IAAI,CAAC,CAAC;EAEhC,oBACEhB,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBvB,OAAA,CAACJ,MAAM;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACV3B,OAAA;MAAAuB,QAAA,eACEvB,OAAA;QAAO4B,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,2BAA2B;QAACC,EAAE,EAAC,QAAQ;QAACC,QAAQ,EAAEC;MAAc;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC7F,eACP3B,OAAA,CAACH,IAAI;MAACO,OAAO,EAAEA;IAAQ;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACtB;AAEV;AAACN,GAAA,CAfQD,GAAG;AAAAa,GAAA,GAAHb,GAAG;AAiBZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAc,GAAA;AAAAC,YAAA,CAAAf,EAAA;AAAAe,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}